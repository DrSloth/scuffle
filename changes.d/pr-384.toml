[[scuffle-h264]]
category = "refactor"
description = "AVCDecoderConfigurationRecord now uses actual Sps and SpsExtended structs"
breaking = true
authors = ["@philipch07"]

[[scuffle-h264]]
category = "fix"
description = "Fixes a bug with the AVCDecoderConfigurationRecord size not being computed correctly"
breaking = true
authors = ["@philipch07"]

[[scuffle-h264]]
category = "fix"
description = "Fixes a bug with the AVCDecoderConfigurationRecord not being built correctly due to byte misalignment"
breaking = true
authors = ["@philipch07"]

[[scuffle-h264]]
category = "feat"
description = "All sps structs can now be \"built\", that is, they can now go from a struct back into a bytestream"
breaking = false
authors = ["@philipch07"]

[[scuffle-h264]]
category = "feat"
description = "Building an Sps will automatically insert necessary emulation prevention bytes (which are already properly handled in the existing parse function)"
breaking = false
authors = ["@philipch07"]

[[scuffle-h264]]
category = "feat"
description = "As a result of being able to build, we also have the ability to generate minimal and functionally equivalent Sps headers via `Sps::reduce()`"
breaking = false
authors = ["@philipch07"]

[[scuffle-h264]]
category = "feat"
description = "All sps structs now have functions to retrieve their bit/byte sizes"
breaking = false
authors = ["@philipch07"]

[[scuffle-expgolomb]]
category = "feat"
description = "Added 2 functions to be able to get the bit size of un/signed expgolombs without having to write them"
breaking = false
authors = ["@philipch07"]
