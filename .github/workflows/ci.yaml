name: ci

on:
  push:
    branches:
      - automation/brawl/try/*
      - automation/brawl/merge/*

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup nasm
        run: |
          sudo apt-get install nasm

      - uses: dtolnay/rust-toolchain@stable
        id: setup-rust
        with:
          toolchain: nightly
          components: clippy

      - uses: Swatinem/rust-cache@v2
        id: cache-rust
        with:
          prefix-key: "v0-rust-${{ steps.setup-rust.outputs.cachekey }}"
          shared-key: clippy

      - name: Make sure code is linted
        run: cargo +nightly clippy

  fmt:
    name: Fmt
    runs-on: ubuntu-24.04
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        id: setup-rust
        with:
          toolchain: nightly
          components: rustfmt

      - name: Make sure code is formatted
        run: cargo +nightly fmt --check

  hakari:
    name: Hakari
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        id: setup-rust
        with:
          toolchain: nightly

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hakari

      - name: Make sure Hakari is up-to-date
        run: |
          set -xeo pipefail

          cargo hakari manage-deps --dry-run
          cargo hakari generate --diff
          cargo hakari verify

  test:
    name: Test
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup nasm
        run: |
          sudo apt-get install nasm

      - uses: dtolnay/rust-toolchain@stable
        id: setup-rust
        with:
          toolchain: nightly
          components: llvm-tools-preview

      - name: Install ffmpeg
        run: |
          curl -L https://sourceforge.net/projects/avbuild/files/linux/ffmpeg-7.1-linux-clang-default.tar.xz/download -o ffmpeg.tar.xz && \
          tar -xvf ffmpeg.tar.xz && \
          mv ffmpeg-7.1-linux-clang-default/include/* /usr/include && \
          mv ffmpeg-7.1-linux-clang-default/lib/amd64/* /usr/local/lib && \
          mv ffmpeg-7.1-linux-clang-default/bin/amd64/* /usr/local/bin

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-${{ steps.setup-rust.outputs.cachekey }}"
          shared-key: test

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest,cargo-llvm-cov

      # Note; we don't run the powerset here because it's very slow on CI
      # Perhaps we should consider it at some point.
      - name: Run tests
        run: cargo +nightly llvm-cov nextest --no-fail-fast --all-features --lcov --output-path ./lcov.info --profile ci

      - name: Codecov Override
        if: ${{ startsWith(github.ref, 'refs/heads/automation/brawl/try/') }}
        run: |
          PR_NUMBER=$(echo ${{ github.ref }} | sed -n 's/^refs\/heads\/automation\/brawl\/try\/\([0-9]*\)$/\1/p')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          RUN_COMMIT_SHA=$(git log -1 --pretty=format:%H)
          echo "RUN_COMMIT_SHA=$RUN_COMMIT_SHA" >> $GITHUB_ENV

      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          override_pr: ${{ env.PR_NUMBER || github.event.pull_request.number || '' }}
          override_commit: ${{ env.RUN_COMMIT_SHA || github.sha }}
          verbose: true

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: ./target/nextest/ci/junit.xml
          override_pr: ${{ env.PR_NUMBER || github.event.pull_request.number || '' }}
          override_commit: ${{ env.RUN_COMMIT_SHA || github.sha }}
          token: ${{ secrets.CODECOV_TOKEN }}

  brawl-done:
    runs-on: ubuntu-24.04
    needs: [hakari, test, clippy, fmt]
    if: ${{ !cancelled() && github.event_name == 'push' }}
    steps:
      - name: calculate the correct exit status
        run: jq --exit-status 'all(.result == "success" or .result == "skipped")' <<< '${{ toJson(needs) }}'
